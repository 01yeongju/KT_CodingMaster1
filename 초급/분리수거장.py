# 7194. 분리수거장

N = int(input())
apartment_list = [list(map(int, input().split())) for _ in range(N)]
result = [N+1, float('inf')]    # [아파트 단지수, 분리수거장으로부터 각 주민들까지의 거리 최소합합]

for i in range(N):
    distance = 0    # 거리 0으로 초기화
    for j in range(N):
        if i != j:  # 같은 단지가 아닐 경우 거리 계산
            distance += abs(apartment_list[i][0] - apartment_list[j][0]) * apartment_list[j][1]
    
    # 저장된 거리 합보다 새로 계산한 거리 합보다 적으면 결과값 재반영 
    if result[1] > distance:
        result[1] = distance
        result[0] = i+1
        
print(result[0])

'''
문제:
두정동에는 N개의 아파트 단지가 일직선상에 존재합니다. 각 아파트 단지에는 1번부터 N번까지 번호가 붙어있습니다.
두정동 동사무소에서는 아파트 단지 중 한 곳에 분리수거장을 지으려고 합니다. 
분리수거장으로부터 각 주민들까지의 거리의 합이 최소가 되도록 하려면 어떤 아파트 단지에 분리수거장을 지어야 하는지 구하세요.
분리수거장으로부터 어떤 주민까지의 거리는 분리수거장이 있는 아파트 단지의 위치와 해당 주민이 거주하는 아파트 단지의 위치의 차로 계산됩니다.
단, 조건을 만족하는 아파트 단지가 여러개일 경우, 더 작은 번호의 아파트 단지에 분리수거장을 짓습니다.

테스트케이스:
7
475 170
28 95
506 8361
51 3988
2 977
607 793
49 847      >   3

11
998 2607
9422 3358
806 80622
2848 4153
398 180
867 22219
6514 806
246 9462
906 43046
2592 289
8 8486      >   3

입력값 설명:
첫째 줄에 아파트 단지의 수 N(1 ≤ N ≤ 100)이 주어집니다.
다음 N개의 줄에는 i(1 ≤ i ≤ N)번 단지의 위치 D[i]와 i번 단지에 거주하는 사람의 수 A[i]가 주어집니다. 
단, 서로 다른 아파트 단지의 위치가 같은 경우는 존재하지 않습니다.
(0 ≤ D[i] ≤ 100,000), (1 ≤ A[i] ≤ 100,000)

출력값 설명:
첫째 줄에 분리수거장을 지을 아파트 단지의 번호를 출력합니다.

'''