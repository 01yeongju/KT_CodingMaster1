# 7185. 바닥 공사1
# 알고리즘 : DP

def fill_floor(N):
    dp = [0] * N
    print(dp)
    dp[0] = 1   # N=1일 때 경우의 수
    dp[1] = 2   # N=2일 때 경우의 수
    print(dp)

    # N=3 이상일 때 경우의 수
    for i in range(2, N):
        dp[i] = (dp[i - 1] + dp[i - 2]) % 796796       # N-2, N-1길이에서의 경우의수 합
        # print(f'{i} : {dp}')

    return dp[N-1]

N = int(input())    # 가로 길이
result = fill_floor(N)  # 바닥을 채우는 경우의 수
print(result)


'''
문제:
가로의 길이가 N, 세로의 길이가 2인 직사각형 형태의 복도가 있습니다. 
태혁은 이 복도의 바닥을 1 X 2의 타일와 2 X 1의 타일을 이용해 채우고자 합니다. 
단, 타일을 겹쳐 놓거나 타일을 작게 쪼갤 수 없습니다. 
바닥을 타일로 가득 채우는 방법의 수를 출력하는 프로그램을 작성하세요.

예를 들어 가로의 길이가 3, 세로의 길이가 2인 경우 바닥을 채우는 방법은 총 3가지이므로 3을 출력해야 합니다.

테스트케이스:
3   ->  3
5   ->  8

입력값 설명:
복도의 가로 길이를 뜻하는 정수 N이 주어집니다. (1 ≤ N ≤ 1,000)

출력값 설명:
가로의 길이가 N, 세로의 길이가 2인 바닥을 채우는 방법의 수를 796,796으로 나눈 나머지를 출력하세요.
'''